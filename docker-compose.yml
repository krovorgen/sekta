version: "3.9"

services:
  # NOTE: клиент не требуется, т.к. ssr
  # client:
  #   container_name: prakticum-client
  #   image: prakticum-client
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.client
  #     args:
  #       CLIENT_PORT: ${CLIENT_PORT}
  #   restart: always
  #   ports:
  #     - "${CLIENT_PORT}:80"
  #   environment:
  #     - CLIENT_PORT=${CLIENT_PORT}
  #     - SERVER_PORT=${SERVER_PORT}

  server:
    container_name: prakticum-server
    image: prackicum-server
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        SERVER_PORT: ${SERVER_PORT}
    restart: always
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SERVER_PORT: ${SERVER_PORT}
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      CLIENT_PATH: /app
    networks:
      - default-network

  postgres:
    container_name: postgres
    image: postgres:14
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./tmp/pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - default-network

networks:
  default-network:
    driver: bridge
